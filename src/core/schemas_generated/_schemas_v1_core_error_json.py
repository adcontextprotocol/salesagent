# generated by datamodel-codegen:
#   filename:  _schemas_v1_core_error_json.json
#   source_etag: W/"68f9296c-3d7"
#   source_last_modified: Wed, 22 Oct 2025 18:58:52 GMT

from __future__ import annotations

from typing import Annotated, Any

from pydantic import BaseModel, ConfigDict, Field


class Error(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    code: Annotated[str, Field(description="Error code for programmatic handling")]
    message: Annotated[str, Field(description="Human-readable error message")]
    field: Annotated[
        str | None, Field(description="Field path associated with the error (e.g., 'packages[0].targeting')")
    ] = None
    suggestion: Annotated[str | None, Field(description="Suggested fix for the error")] = None
    retry_after: Annotated[float | None, Field(description="Seconds to wait before retrying the operation", ge=0.0)] = (
        None
    )
    details: Annotated[Any | None, Field(description="Additional task-specific error details")] = None
