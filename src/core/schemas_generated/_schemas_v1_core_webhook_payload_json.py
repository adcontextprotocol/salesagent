# generated by datamodel-codegen:
#   filename:  _schemas_v1_core_webhook-payload_json.json
#   schema_hash: 708a3d00f139

from __future__ import annotations

from enum import Enum
from typing import Annotated, Any

from pydantic import AwareDatetime, BaseModel, ConfigDict, Field


class TaskType(Enum):
    create_media_buy = "create_media_buy"
    update_media_buy = "update_media_buy"
    sync_creatives = "sync_creatives"
    activate_signal = "activate_signal"
    get_signals = "get_signals"


class Domain(Enum):
    media_buy = "media-buy"
    signals = "signals"


class Status(Enum):
    submitted = "submitted"
    working = "working"
    input_required = "input-required"
    completed = "completed"
    canceled = "canceled"
    failed = "failed"
    rejected = "rejected"
    auth_required = "auth-required"
    unknown = "unknown"


class Progress(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    percentage: Annotated[float | None, Field(description="Completion percentage (0-100)", ge=0.0, le=100.0)] = None
    current_step: Annotated[str | None, Field(description="Current step or phase of the operation")] = None
    total_steps: Annotated[int | None, Field(description="Total number of steps in the operation", ge=1)] = None
    step_number: Annotated[int | None, Field(description="Current step number", ge=1)] = None


class Details(BaseModel):
    model_config = ConfigDict(
        extra="allow",
    )
    domain: Annotated[Domain | None, Field(description="AdCP domain where error occurred")] = None
    operation: Annotated[str | None, Field(description="Specific operation that failed")] = None
    specific_context: Annotated[dict[str, Any] | None, Field(description="Domain-specific error context")] = None


class Error(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    code: Annotated[str, Field(description="Error code for programmatic handling")]
    message: Annotated[str, Field(description="Detailed error message")]
    details: Annotated[Details | None, Field(description="Additional error context")] = None


class WebhookPayload(BaseModel):
    model_config = ConfigDict(
        extra="allow",
    )
    task_id: Annotated[
        str,
        Field(
            description="Unique identifier for this task. Use this to correlate webhook notifications with the original task submission."
        ),
    ]
    task_type: Annotated[
        TaskType,
        Field(
            description="Valid AdCP task types across all domains. These represent the complete set of operations that can be tracked via the task management system.",
            title="Task Type",
        ),
    ]
    domain: Annotated[
        Domain,
        Field(description="AdCP domain this task belongs to. Helps classify the operation type at a high level."),
    ]
    status: Annotated[
        Status,
        Field(
            description="Standardized task status values based on A2A TaskState enum. Indicates the current state of any AdCP operation.",
            title="Task Status",
        ),
    ]
    created_at: Annotated[
        AwareDatetime,
        Field(
            description="ISO 8601 timestamp when the task was initially created. Useful for tracking operation duration."
        ),
    ]
    updated_at: Annotated[
        AwareDatetime,
        Field(
            description="ISO 8601 timestamp when the task status was last updated. This matches the timestamp when the webhook was triggered."
        ),
    ]
    completed_at: Annotated[
        AwareDatetime | None,
        Field(
            description="ISO 8601 timestamp when the task reached a terminal state (completed, failed, or canceled). Only present for terminal states."
        ),
    ] = None
    message: Annotated[
        str | None,
        Field(
            description="Human-readable summary of the current task state. Provides context about what happened and what action may be needed."
        ),
    ] = None
    context_id: Annotated[
        str | None,
        Field(
            description="Session/conversation identifier. Use this to continue the conversation if input-required status needs clarification or additional parameters."
        ),
    ] = None
    progress: Annotated[
        Progress | None,
        Field(
            description="Progress information for tasks still in 'working' state. Rarely seen in webhooks since 'working' tasks typically complete synchronously, but may appear if a task transitions from 'submitted' to 'working'."
        ),
    ] = None
    error: Annotated[
        Error | None, Field(description="Error details for failed tasks. Only present when status is 'failed'.")
    ] = None
