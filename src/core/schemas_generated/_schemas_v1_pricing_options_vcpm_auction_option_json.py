# generated by datamodel-codegen:
#   filename:  _schemas_v1_pricing-options_vcpm-auction-option_json.json
#   source_etag: W/"68f2761a-851"
#   source_last_modified: Fri, 17 Oct 2025 17:00:10 GMT

from __future__ import annotations

from typing import Annotated, Literal, Optional

from pydantic import BaseModel, ConfigDict, Field


class PriceGuidance(BaseModel):
    floor: Annotated[float, Field(description="Minimum acceptable bid price", ge=0.0)]
    p25: Annotated[Optional[float], Field(description="25th percentile of recent winning bids", ge=0.0)] = None
    p50: Annotated[Optional[float], Field(description="Median of recent winning bids", ge=0.0)] = None
    p75: Annotated[Optional[float], Field(description="75th percentile of recent winning bids", ge=0.0)] = None
    p90: Annotated[Optional[float], Field(description="90th percentile of recent winning bids", ge=0.0)] = None


class VcpmAuctionPricingOption(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    pricing_option_id: Annotated[
        str,
        Field(description="Unique identifier for this pricing option within the product (e.g., 'vcpm_usd_auction')"),
    ]
    pricing_model: Annotated[Literal["vcpm"], Field(description="Cost per 1,000 viewable impressions (MRC standard)")]
    currency: Annotated[
        str, Field(description="ISO 4217 currency code", examples=["USD", "EUR", "GBP", "JPY"], pattern="^[A-Z]{3}$")
    ]
    price_guidance: Annotated[PriceGuidance, Field(description="Statistical guidance for auction pricing")]
    min_spend_per_package: Annotated[
        Optional[float],
        Field(
            description="Minimum spend requirement per package using this pricing option, in the specified currency",
            ge=0.0,
        ),
    ] = None
