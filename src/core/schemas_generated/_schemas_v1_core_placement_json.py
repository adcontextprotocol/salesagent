# generated by datamodel-codegen:
#   filename:  _schemas_v1_core_placement_json.json
#   source_etag: W/"68f9296c-3df"
#   source_last_modified: Wed, 22 Oct 2025 18:58:52 GMT

from __future__ import annotations

from typing import Annotated

from pydantic import AnyUrl, BaseModel, ConfigDict, Field


class FormatId(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    agent_url: Annotated[
        AnyUrl,
        Field(
            description="URL of the agent that defines this format (e.g., 'https://creatives.adcontextprotocol.org' for standard formats, or 'https://publisher.com/.well-known/adcp/sales' for custom formats)"
        ),
    ]
    id: Annotated[
        str,
        Field(
            description="Format identifier within the agent's namespace (e.g., 'display_300x250', 'video_standard_30s')",
            pattern="^[a-zA-Z0-9_-]+$",
        ),
    ]


class Placement(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    placement_id: Annotated[str, Field(description="Unique identifier for the placement within the product")]
    name: Annotated[
        str, Field(description="Human-readable name for the placement (e.g., 'Homepage Banner', 'Article Sidebar')")
    ]
    description: Annotated[
        str | None, Field(description="Detailed description of where and how the placement appears")
    ] = None
    format_ids: Annotated[
        list[FormatId] | None,
        Field(
            description="Format IDs supported by this specific placement (subset of product's formats)", min_length=1
        ),
    ] = None
