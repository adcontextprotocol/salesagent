# generated by datamodel-codegen:
#   filename:  _schemas_v1_core_assets_daast-asset_json.json
#   timestamp: 2025-10-15T12:36:38+00:00

from __future__ import annotations

from enum import Enum
from typing import Annotated, Literal, Union

from pydantic import AnyUrl, BaseModel, ConfigDict, Field, RootModel


class DaastVersion(Enum):
    field_1_0 = "1.0"
    field_1_1 = "1.1"


class TrackingEvent(Enum):
    start = "start"
    first_quartile = "firstQuartile"
    midpoint = "midpoint"
    third_quartile = "thirdQuartile"
    complete = "complete"
    impression = "impression"
    pause = "pause"
    resume = "resume"
    skip = "skip"
    mute = "mute"
    unmute = "unmute"


class DaastAsset1(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    asset_type: Literal["daast"]
    url: Annotated[AnyUrl, Field(description="URL endpoint that returns DAAST XML")]
    content: Annotated[str | None, Field(description="Inline DAAST XML content")] = None
    daast_version: Annotated[DaastVersion | None, Field(description="DAAST specification version")] = None
    duration_ms: Annotated[
        int | None, Field(description="Expected audio duration in milliseconds (if known)", ge=0)
    ] = None
    tracking_events: Annotated[
        list[TrackingEvent] | None, Field(description="Tracking events supported by this DAAST tag")
    ] = None
    companion_ads: Annotated[bool | None, Field(description="Whether companion display ads are included")] = None


class DaastAsset2(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    asset_type: Literal["daast"]
    url: Annotated[AnyUrl | None, Field(description="URL endpoint that returns DAAST XML")] = None
    content: Annotated[str, Field(description="Inline DAAST XML content")]
    daast_version: Annotated[DaastVersion | None, Field(description="DAAST specification version")] = None
    duration_ms: Annotated[
        int | None, Field(description="Expected audio duration in milliseconds (if known)", ge=0)
    ] = None
    tracking_events: Annotated[
        list[TrackingEvent] | None, Field(description="Tracking events supported by this DAAST tag")
    ] = None
    companion_ads: Annotated[bool | None, Field(description="Whether companion display ads are included")] = None


class DaastAsset(RootModel[Union[DaastAsset1, DaastAsset2]]):
    root: Annotated[
        DaastAsset1 | DaastAsset2,
        Field(
            description="DAAST (Digital Audio Ad Serving Template) tag for third-party audio ad serving",
            title="DAAST Asset",
        ),
    ]
