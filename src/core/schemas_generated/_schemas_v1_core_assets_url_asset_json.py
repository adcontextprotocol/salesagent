# generated by datamodel-codegen:
#   filename:  _schemas_v1_core_assets_url-asset_json.json
#   source_etag: W/"68f98531-3c9"
#   source_last_modified: Thu, 23 Oct 2025 01:30:25 GMT

from __future__ import annotations

from enum import Enum
from typing import Annotated

from pydantic import AnyUrl, BaseModel, ConfigDict, Field


class UrlType(Enum):
    clickthrough = "clickthrough"
    tracker_pixel = "tracker_pixel"
    tracker_script = "tracker_script"


class UrlAsset(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    url: Annotated[AnyUrl, Field(description="URL reference")]
    url_type: Annotated[
        UrlType | None,
        Field(
            description="Type of URL asset: 'clickthrough' for user click destination (landing page), 'tracker_pixel' for impression/event tracking via HTTP request (fires GET, expects pixel/204 response), 'tracker_script' for measurement SDKs that must load as <script> tag (OMID verification, native event trackers using method:2)"
        ),
    ] = None
    description: Annotated[str | None, Field(description="Description of what this URL points to")] = None
