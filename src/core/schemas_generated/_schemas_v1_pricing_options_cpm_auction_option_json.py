# generated by datamodel-codegen:
#   filename:  _schemas_v1_pricing-options_cpm-auction-option_json.json
#   source_etag: W/"68f9296c-7e9"
#   source_last_modified: Wed, 22 Oct 2025 18:58:52 GMT

from __future__ import annotations

from typing import Annotated, Literal

from pydantic import BaseModel, ConfigDict, Field


class PriceGuidance(BaseModel):
    floor: Annotated[
        float, Field(description="Minimum bid price - publisher will reject bids under this value", ge=0.0)
    ]
    p25: Annotated[float | None, Field(description="25th percentile winning price", ge=0.0)] = None
    p50: Annotated[float | None, Field(description="Median winning price", ge=0.0)] = None
    p75: Annotated[float | None, Field(description="75th percentile winning price", ge=0.0)] = None
    p90: Annotated[float | None, Field(description="90th percentile winning price", ge=0.0)] = None


class CpmAuctionPricingOption(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    pricing_option_id: Annotated[
        str, Field(description="Unique identifier for this pricing option within the product (e.g., 'cpm_usd_auction')")
    ]
    pricing_model: Annotated[Literal["cpm"], Field(description="Cost per 1,000 impressions")]
    currency: Annotated[
        str, Field(description="ISO 4217 currency code", examples=["USD", "EUR", "GBP", "JPY"], pattern="^[A-Z]{3}$")
    ]
    price_guidance: Annotated[PriceGuidance, Field(description="Pricing guidance for auction-based CPM bidding")]
    min_spend_per_package: Annotated[
        float | None,
        Field(
            description="Minimum spend requirement per package using this pricing option, in the specified currency",
            ge=0.0,
        ),
    ] = None
