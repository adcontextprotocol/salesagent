# generated by datamodel-codegen:
#   filename:  _schemas_v1_media-buy_get-media-buy-delivery-request_json.json
#   source_etag: W/"68f98531-668"
#   source_last_modified: Thu, 23 Oct 2025 01:30:25 GMT

from __future__ import annotations

from enum import Enum
from typing import Annotated

from pydantic import BaseModel, ConfigDict, Field


class StatusFilter(Enum):
    active = "active"
    pending = "pending"
    paused = "paused"
    completed = "completed"
    failed = "failed"
    all = "all"


class StatusFilterEnum(Enum):
    active = "active"
    pending = "pending"
    paused = "paused"
    completed = "completed"
    failed = "failed"


class GetMediaBuyDeliveryRequest(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    media_buy_ids: Annotated[
        list[str] | None, Field(description="Array of publisher media buy IDs to get delivery data for")
    ] = None
    buyer_refs: Annotated[
        list[str] | None, Field(description="Array of buyer reference IDs to get delivery data for")
    ] = None
    status_filter: Annotated[
        StatusFilter | list[StatusFilterEnum] | None,
        Field(description="Filter by status. Can be a single status or array of statuses"),
    ] = None
    start_date: Annotated[
        str | None, Field(description="Start date for reporting period (YYYY-MM-DD)", pattern="^\\d{4}-\\d{2}-\\d{2}$")
    ] = None
    end_date: Annotated[
        str | None, Field(description="End date for reporting period (YYYY-MM-DD)", pattern="^\\d{4}-\\d{2}-\\d{2}$")
    ] = None
