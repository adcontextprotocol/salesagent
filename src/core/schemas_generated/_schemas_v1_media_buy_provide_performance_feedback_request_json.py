# generated by datamodel-codegen:
#   filename:  _schemas_v1_media-buy_provide-performance-feedback-request_json.json
#   timestamp: 2025-10-15T12:36:38+00:00

from __future__ import annotations

from enum import Enum
from typing import Annotated

from pydantic import AwareDatetime, BaseModel, ConfigDict, Field


class MeasurementPeriod(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    start: Annotated[AwareDatetime, Field(description="ISO 8601 start timestamp for measurement period")]
    end: Annotated[AwareDatetime, Field(description="ISO 8601 end timestamp for measurement period")]


class MetricType(Enum):
    overall_performance = "overall_performance"
    conversion_rate = "conversion_rate"
    brand_lift = "brand_lift"
    click_through_rate = "click_through_rate"
    completion_rate = "completion_rate"
    viewability = "viewability"
    brand_safety = "brand_safety"
    cost_efficiency = "cost_efficiency"


class FeedbackSource(Enum):
    buyer_attribution = "buyer_attribution"
    third_party_measurement = "third_party_measurement"
    platform_analytics = "platform_analytics"
    verification_partner = "verification_partner"


class ProvidePerformanceFeedbackRequest(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    media_buy_id: Annotated[str, Field(description="Publisher's media buy identifier", min_length=1)]
    measurement_period: Annotated[MeasurementPeriod, Field(description="Time period for performance measurement")]
    performance_index: Annotated[
        float,
        Field(
            description="Normalized performance score (0.0 = no value, 1.0 = expected, >1.0 = above expected)", ge=0.0
        ),
    ]
    package_id: Annotated[
        str | None,
        Field(description="Specific package within the media buy (if feedback is package-specific)", min_length=1),
    ] = None
    creative_id: Annotated[
        str | None, Field(description="Specific creative asset (if feedback is creative-specific)", min_length=1)
    ] = None
    metric_type: Annotated[MetricType | None, Field(description="The business metric being measured")] = (
        "overall_performance"
    )
    feedback_source: Annotated[FeedbackSource | None, Field(description="Source of the performance data")] = (
        "buyer_attribution"
    )
