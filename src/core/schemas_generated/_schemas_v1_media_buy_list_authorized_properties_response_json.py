# generated by datamodel-codegen:
#   filename:  _schemas_v1_media-buy_list-authorized-properties-response_json.json
#   source_etag: W/"68ee6f3c-8cc"
#   source_last_modified: Tue, 14 Oct 2025 15:41:48 GMT

from __future__ import annotations

from enum import Enum
from typing import Annotated, Any

from pydantic import AwareDatetime, BaseModel, ConfigDict, Field, RootModel


class PublisherDomain(RootModel[str]):
    root: Annotated[
        str,
        Field(
            description="Domain where publisher's adagents.json is hosted (e.g., 'cnn.com')",
            pattern="^[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$",
        ),
    ]


class PrimaryChannel(Enum):
    display = "display"
    video = "video"
    audio = "audio"
    native = "native"
    dooh = "dooh"
    ctv = "ctv"
    podcast = "podcast"
    retail = "retail"
    social = "social"


class PrimaryCountry(RootModel[str]):
    root: Annotated[str, Field(pattern="^[A-Z]{2}$")]


class Error(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    code: Annotated[str, Field(description="Error code for programmatic handling")]
    message: Annotated[str, Field(description="Human-readable error message")]
    field: Annotated[
        str | None, Field(description="Field path associated with the error (e.g., 'packages[0].targeting')")
    ] = None
    suggestion: Annotated[str | None, Field(description="Suggested fix for the error")] = None
    retry_after: Annotated[float | None, Field(description="Seconds to wait before retrying the operation", ge=0.0)] = (
        None
    )
    details: Annotated[Any | None, Field(description="Additional task-specific error details")] = None


class ListAuthorizedPropertiesResponse(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    publisher_domains: Annotated[
        list[PublisherDomain],
        Field(
            description="Publisher domains this agent is authorized to represent. Buyers should fetch each publisher's adagents.json to see property definitions and verify this agent is in their authorized_agents list with authorization scope.",
            min_length=1,
        ),
    ]
    primary_channels: Annotated[
        list[PrimaryChannel] | None,
        Field(
            description="Primary advertising channels represented in this property portfolio. Helps buying agents quickly filter relevance.",
            min_length=1,
        ),
    ] = None
    primary_countries: Annotated[
        list[PrimaryCountry] | None,
        Field(
            description="Primary countries (ISO 3166-1 alpha-2 codes) where properties are concentrated. Helps buying agents quickly filter relevance.",
            min_length=1,
        ),
    ] = None
    portfolio_description: Annotated[
        str | None,
        Field(
            description="Markdown-formatted description of the property portfolio, including inventory types, audience characteristics, and special features.",
            max_length=5000,
            min_length=1,
        ),
    ] = None
    advertising_policies: Annotated[
        str | None,
        Field(
            description="Publisher's advertising content policies, restrictions, and guidelines in natural language. May include prohibited categories, blocked advertisers, restricted tactics, brand safety requirements, or links to full policy documentation.",
            max_length=10000,
            min_length=1,
        ),
    ] = None
    last_updated: Annotated[
        AwareDatetime | None,
        Field(
            description="ISO 8601 timestamp of when the agent's publisher authorization list was last updated. Buyers can use this to determine if their cached publisher adagents.json files might be stale."
        ),
    ] = None
    errors: Annotated[
        list[Error] | None, Field(description="Task-specific errors and warnings (e.g., property availability issues)")
    ] = None
