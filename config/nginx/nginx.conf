user www-data;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml application/atom+xml image/svg+xml;

    # Upstream servers
    upstream mcp_server {
        server localhost:8080;
    }

    upstream admin_ui {
        server localhost:8001;
    }

    # Admin UI subdomain server
    server {
        listen 0.0.0.0:8000;
        server_name admin.sales-agent.scope3.com;

        # Root redirects to admin index
        location = / {
            proxy_pass http://admin_ui/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Prefix /admin;
        }

        # All admin routes
        location / {
            proxy_pass http://admin_ui;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Prefix /admin;
            proxy_cache_bypass $http_upgrade;
        }

        # Health check
        location /health {
            access_log off;
            return 200 "admin-ui healthy\n";
            add_header Content-Type text/plain;
        }
    }

    # AdCP Protocol subdomain routing (any subdomain under adcontextprotocol.org)
    server {
        listen 0.0.0.0:8000;
        server_name ~^(?<agent>[^.]+)\.adcontextprotocol\.org$;

        # MCP endpoint
        location /mcp {
            proxy_pass http://localhost:8080;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header x-adcp-agent $agent;
            proxy_set_header x-adcp-auth $http_x_adcp_auth;
            proxy_cache_bypass $http_upgrade;
        }

        # A2A agent discovery endpoints
        location /.well-known/ {
            proxy_pass http://localhost:8091/.well-known/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header x-adcp-agent $agent;
            proxy_set_header Apx-Incoming-Host $http_apx_incoming_host;
        }

        # A2A agent card endpoint
        location /agent.json {
            proxy_pass http://localhost:8091/agent.json;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header x-adcp-agent $agent;
            proxy_set_header Apx-Incoming-Host $http_apx_incoming_host;
        }

        # A2A endpoint
        location /a2a {
            proxy_pass http://localhost:8091;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header x-adcp-agent $agent;
            proxy_set_header Apx-Incoming-Host $http_apx_incoming_host;
            proxy_cache_bypass $http_upgrade;
        }

        # Admin UI routes (for adcontextprotocol.org domains)
        location /admin {
            proxy_pass http://admin_ui;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Prefix /admin;
            proxy_cache_bypass $http_upgrade;
        }

        # MCP server (all routes including root)
        location / {
            proxy_pass http://mcp_server;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header x-adcp-agent $agent;
            proxy_set_header x-adcp-auth $http_x_adcp_auth;
            proxy_set_header Apx-Incoming-Host $http_apx_incoming_host;
            proxy_set_header X-Debug-Agent $agent;
            proxy_set_header X-Debug-Original-Host $http_apx_incoming_host;
            proxy_cache_bypass $http_upgrade;
        }

        # Health check
        location /health {
            access_log off;
            return 200 "$agent-agent healthy\n";
            add_header Content-Type text/plain;
        }
    }

    # Tenant-specific subdomain routing
    server {
        listen 0.0.0.0:8000;
        server_name ~^(?<tenant>[^.]+)\.sales-agent\.scope3\.com$;

        # MCP endpoint for specific tenant - proxy entire path to MCP server
        location /mcp {
            proxy_pass http://localhost:8080;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header x-adcp-tenant $tenant;
            proxy_set_header x-adcp-auth $http_x_adcp_auth;
            proxy_cache_bypass $http_upgrade;
        }

        # A2A agent discovery endpoints
        location /.well-known/ {
            proxy_pass http://localhost:8091/.well-known/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header x-adcp-tenant $tenant;
        }

        # A2A agent card endpoint
        location /agent.json {
            proxy_pass http://localhost:8091/agent.json;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header x-adcp-tenant $tenant;
        }

        # A2A endpoint for specific tenant (both with and without trailing slash)
        location /a2a {
            proxy_pass http://localhost:8091;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header x-adcp-tenant $tenant;
            proxy_cache_bypass $http_upgrade;
        }

        # Admin UI endpoint for tenant-specific access (all /admin/* paths)
        location /admin/ {
            proxy_pass http://localhost:8001/admin/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Prefix /admin;
            proxy_cache_bypass $http_upgrade;
        }

        # Admin UI endpoint for exact /admin path (redirect to /admin/)
        location = /admin {
            return 301 $scheme://$host/admin/;
        }

        # Root serves tenant landing page via MCP server
        location = / {
            proxy_pass http://localhost:8080/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Apx-Incoming-Host $tenant.sales-agent.scope3.com;
            proxy_cache_bypass $http_upgrade;
        }

        # Health check with tenant info
        location /health {
            access_log off;
            return 200 "tenant-$tenant healthy\n";
            add_header Content-Type text/plain;
        }

        # Catch-all for other routes to be handled by MCP server (e.g., diagnostic routes)
        location / {
            proxy_pass http://localhost:8080;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Apx-Incoming-Host $tenant.sales-agent.scope3.com;
            proxy_cache_bypass $http_upgrade;
        }
    }

    # Base domain server (redirects to admin)
    server {
        listen 0.0.0.0:8000;
        server_name sales-agent.scope3.com;

        # Admin UI routes
        location /admin {
            proxy_pass http://admin_ui/admin;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        location /static {
            proxy_pass http://admin_ui/static;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /auth {
            proxy_pass http://admin_ui/auth;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api {
            proxy_pass http://admin_ui/api;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /callback {
            proxy_pass http://admin_ui/callback;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /logout {
            proxy_pass http://admin_ui/logout;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /login {
            proxy_pass http://admin_ui/login;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /test {
            proxy_pass http://admin_ui/test;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # A2A agent discovery endpoints
        location /.well-known/ {
            proxy_pass http://localhost:8091/.well-known/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # A2A agent card endpoint
        location /agent.json {
            proxy_pass http://localhost:8091/agent.json;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # A2A endpoint
        location /a2a {
            proxy_pass http://localhost:8091;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # Root route handling - check for external domains first
        location = / {
            # Check if this is an external domain request via Approximated
            set $external_domain 0;
            if ($http_apx_incoming_host ~ "\.adcontextprotocol\.org$") {
                set $external_domain 1;
            }

            # If external domain, route to landing page via MCP server
            if ($external_domain = 1) {
                rewrite ^/$ /landing last;
            }

            # Otherwise redirect to admin
            return 302 https://admin.sales-agent.scope3.com/;
        }

        # MCP server (default for all other routes - also handles Approximated routing)
        location / {
            proxy_pass http://mcp_server;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header x-adcp-auth $http_x_adcp_auth;
            proxy_set_header Apx-Incoming-Host $http_apx_incoming_host;
            proxy_cache_bypass $http_upgrade;
        }

        # Health check
        location /health {
            access_log off;
            return 200 "main-server healthy\n";
            add_header Content-Type text/plain;
        }
    }

    # Default fallback server for any other domains
    server {
        listen 0.0.0.0:8000 default_server;
        server_name _;

        # Redirect to main domain
        location / {
            return 301 https://sales-agent.scope3.com$request_uri;
        }

        # Health check
        location /health {
            access_log off;
            return 200 "fallback healthy\n";
            add_header Content-Type text/plain;
        }
    }
}
